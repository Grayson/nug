(function createMethodFromStatement (statement)
	(set type (statement car))
	(set statement (statement cdr))
	(set components (NSMutableArray array))
	(while (statement cdr)
		(if (== (statement car) 'is) (break))
	 	(components addObject:((statement car) stringValue))
		(set statement (statement cdr)) )
	(set s (NSMutableString string))
	(if (or (== type 'imethod) (== type '-)) (s appendString:"- "))
	(if (or (== type 'cmethod) (== type '+)) (s appendString:"+ "))
	(s appendString:(components componentsJoinedByString:" "))
	(s appendString:";\n")
	s)

(function createHeaderFromFile (f)
	(set code (_parser parse:(NSString stringWithContentsOfFile:f)))
	(set header (NSMutableString string))
	((code cdr) each:(do (statement)
		(case (statement first)
			('class 
				(set className ((statement second) stringValue))
				(cond ((eq (statement third) 'is)
					(set parentClassName (statement fourth))
					(set rest ((((statement cdr) cdr) cdr) cdr)))
				(else
					(set parentClassName nil)
					(set rest ((statement cdr) cdr)) ))
				
				(if (parentClassName) ; Ought to be an object created in Nu
					(header appendString:"@interface #{className} : #{parentClassName} {}\n")
				(else ; A category
					(header appendString:"@interface #{className} (#{((f lastPathComponent) stringByDeletingPathExtension)})\n")))
				(set methods array)
				(rest each:(do (statement)
					(if (or (eq (statement first) 'imethod)
							(eq (statement first) '-)
							(eq (statement first) 'cmethod)
							(eq (statement first) '+))
						(header appendString:(createMethodFromStatement statement)) ) ))
				(header appendString:"@end\n\n") )
				(else nil) ) ))
	header)

(function nug ()
	(puts "Nug is running")
	(set f ((NSUserDefaults standardUserDefaults) objectForKey:"fre"))
	(if (== f nil) (set f "^nu/.*\.nu$"))
	(set files (filelist f))
	(set pwd ((NSString stringWithShellCommand:"pwd") stringByTrimmingCharactersInSet:(NSCharacterSet whitespaceAndNewlineCharacterSet)))
	(if (not ((NSFileManager defaultManager) fileExistsAtPath:"#{pwd}/nug/")) 
		((NSFileManager defaultManager) createDirectoryAtPath:"#{pwd}/nug/" attributes:nil))
	(files each:(do (file)
		(set header (createHeaderFromFile file))
		(if (> (header length) 0)
			(puts "Writing header #{pwd}/nug/#{((file lastPathComponent) stringByDeletingPathExtension)}.h")
			(header writeToFile:"#{pwd}/nug/#{((file lastPathComponent) stringByDeletingPathExtension)}.h" atomically:YES) ) )) )

; bake: nubake nug.nu -s
; compile: gcc nug.m -o nug -framework Cocoa -framework Nu
(nug)